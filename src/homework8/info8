Мини-проект "Счастливая семья" (продолжение)
Суть проекта: описание структуры семьи с учетом того, что у каждого человека есть кровные родственники, а состав
семьи может со временем меняться.

Жизненный цикл объекта. Сборщик мусора

Задание
Переопределите метод finalize(). Усовершенствуйте проект: реализуйте виды животных и расписание внерабочих занятий людей через
перечисления enum (используйте виды на свое усмотрение, например, CAT, DOG и т.д.)

Технические требования:

Переопределите метод finalize() у классов Family, Human, Pet так, чтобы они перед удалением сборщиком мусора вывводили
в консоль информацию об удаляемом объекте.
Создайте в классе Main в цикле столько объектов типа Human, чтобы сборщик мусора начал удалять старые объекты
(от 10 тысяч до 10 миллионов, в зависимости от объема доступной оперативной памяти).
Создайте enum Species со списком видов животных; добавьте перечисления на свое усмотрение;
сделайте рефакторинг класса Pet - вид животного изменится с типа String на тип Species

Создайте enum DayOfWeek со списком дней недели; добавьте туда все 7 дней; когда будете заполнять расписание Human (в методе main)
используйте метод перечисления name(), который возвращает строковое представление текущего перечисления.


Не обязательное задание продвинутой сложности:
enum Species должен содержать конструктор, в котором можно будет указать несколько параметров животного:

умеет ли животное летать (canFly, boolean)
сколько у животного лап (numberOfLegs, число)
есть ли у животного шерсть (hasFur, boolean)


Добавить информацию о том, умеет ли животное летать, есть ли у него шерсть, и количество лап в метод toString() класса Pet.


Литература:

Кратко о finalize()
finalize(): подводные камни
Перечисления enum
Java Enum Tutorial with examples